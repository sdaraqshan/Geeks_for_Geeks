Common elementsGiven three arrays sorted in increasing order. Find the elements that are common in all three arrays.
Note: can you take care of the duplicates without using any additional Data Structure?

Example 1:

Input:
n1 = 6; A = {1, 5, 10, 20, 40, 80}
n2 = 5; B = {6, 7, 20, 80, 100}
n3 = 8; C = {3, 4, 15, 20, 30, 70, 80, 120}
Output: 20 80
Explanation: 20 and 80 are the only
common elements in A, B and C.

******************************************************

class Solution
{
    ArrayList<Integer> commonElements(int A[], int B[], int C[], int n1, int n2, int n3) 
    {
        // code here 
         ArrayList<Integer> list = new ArrayList<>();

       HashMap<Integer, Integer> map = new HashMap<>();

       for (int x : A) {
           map.put(x, 1);
       }

       for (int x : B) {
           if (map.containsKey(x)) {
               map.put(x, 2);
           }
       }

       for (int x : C) {
           if (map.containsKey(x) && map.get(x) == 2) {
               map.put(x, 3);
           }
       }
       

       for (Map.Entry<Integer, Integer> mp : map.entrySet())
           if (mp.getValue() == 3) list.add(mp.getKey());


       Collections.sort(list);
       return list;
   }
}
