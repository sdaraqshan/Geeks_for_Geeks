Given a string check if it is Pangram or not. A pangram is a sentence containing every letter in the English Alphabet.

Example 1:

Input:
S = Bawds jog, flick quartz, vex nymph
Output: 1
Explantion: In the given input, there
are all the letters of the English
alphabet. Hence, the output is 1.
Example 2:

Input:
S = sdfs
Output: 0
Explantion: In the given input, there
aren't all the letters present in the
English alphabet. Hence, the output
is 0.
Your Task:
 You need to complete the function checkPangram() that takes a string as a parameter and returns true if the string is a pangram, else it returns false.

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(Number of distinct characters).

Constraints:
1 ≤ |S| ≤ 104

------------------------------------------------------------------------------------------------------------------------


class Solution
{
    //Function to check if a string is Pangram or not.
    public static boolean checkPangram  (String str) {

        // your code here
        
        /*int n=str.length();
        int flag=0;
        
        transform(str.begin(), str.end(), str.begin(), ::tolower);
        
        for(char j='a'; j<='z'; j++)
        {
            for(int i=0; i<n; i++)
            {
                if(str[i]==j)
                {
                    flag++;
                    break;
                }
            }
        }
        if(flag==26)
        {
            return true;
        }
        else 
        return false;
    }*/
    
     str=str.toUpperCase();
        for(char i='A';i<='Z';i++)
        {
            if(!str.contains(String.valueOf(i)))
            return false;
        }
        return true;
    }

    }
